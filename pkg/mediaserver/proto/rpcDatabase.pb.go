// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.25.3
// source: rpcDatabase.proto

package proto

import (
	proto "github.com/je4/genericproto/v2/pkg/generic/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IngestMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item          *ItemIdentifier `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Status        string          `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	ItemMetadata  *ItemMetadata   `protobuf:"bytes,3,opt,name=itemMetadata,proto3" json:"itemMetadata,omitempty"`
	CacheMetadata *CacheMetadata  `protobuf:"bytes,4,opt,name=cacheMetadata,proto3" json:"cacheMetadata,omitempty"`
	FullMetadata  string          `protobuf:"bytes,5,opt,name=fullMetadata,proto3" json:"fullMetadata,omitempty"`
	Error         *string         `protobuf:"bytes,6,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *IngestMetadata) Reset() {
	*x = IngestMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcDatabase_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngestMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestMetadata) ProtoMessage() {}

func (x *IngestMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_rpcDatabase_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestMetadata.ProtoReflect.Descriptor instead.
func (*IngestMetadata) Descriptor() ([]byte, []int) {
	return file_rpcDatabase_proto_rawDescGZIP(), []int{0}
}

func (x *IngestMetadata) GetItem() *ItemIdentifier {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *IngestMetadata) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *IngestMetadata) GetItemMetadata() *ItemMetadata {
	if x != nil {
		return x.ItemMetadata
	}
	return nil
}

func (x *IngestMetadata) GetCacheMetadata() *CacheMetadata {
	if x != nil {
		return x.CacheMetadata
	}
	return nil
}

func (x *IngestMetadata) GetFullMetadata() string {
	if x != nil {
		return x.FullMetadata
	}
	return ""
}

func (x *IngestMetadata) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type DerivatIngestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Subtype string   `protobuf:"bytes,2,opt,name=subtype,proto3" json:"subtype,omitempty"`
	Suffix  []string `protobuf:"bytes,3,rep,name=suffix,proto3" json:"suffix,omitempty"`
}

func (x *DerivatIngestRequest) Reset() {
	*x = DerivatIngestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcDatabase_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DerivatIngestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DerivatIngestRequest) ProtoMessage() {}

func (x *DerivatIngestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpcDatabase_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DerivatIngestRequest.ProtoReflect.Descriptor instead.
func (*DerivatIngestRequest) Descriptor() ([]byte, []int) {
	return file_rpcDatabase_proto_rawDescGZIP(), []int{1}
}

func (x *DerivatIngestRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DerivatIngestRequest) GetSubtype() string {
	if x != nil {
		return x.Subtype
	}
	return ""
}

func (x *DerivatIngestRequest) GetSuffix() []string {
	if x != nil {
		return x.Suffix
	}
	return nil
}

type DerivatIngestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item    *Item    `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Missing []string `protobuf:"bytes,2,rep,name=missing,proto3" json:"missing,omitempty"`
}

func (x *DerivatIngestResponse) Reset() {
	*x = DerivatIngestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcDatabase_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DerivatIngestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DerivatIngestResponse) ProtoMessage() {}

func (x *DerivatIngestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpcDatabase_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DerivatIngestResponse.ProtoReflect.Descriptor instead.
func (*DerivatIngestResponse) Descriptor() ([]byte, []int) {
	return file_rpcDatabase_proto_rawDescGZIP(), []int{2}
}

func (x *DerivatIngestResponse) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *DerivatIngestResponse) GetMissing() []string {
	if x != nil {
		return x.Missing
	}
	return nil
}

var File_rpcDatabase_proto protoreflect.FileDescriptor

var file_rpcDatabase_proto_rawDesc = []byte{
	0x0a, 0x11, 0x72, 0x70, 0x63, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0b, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xb2, 0x02, 0x0a, 0x0e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x42, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x69, 0x74, 0x65, 0x6d,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x0d, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x0d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x22, 0x0a, 0x0c, 0x66, 0x75, 0x6c, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x75, 0x6c, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x5c, 0x0a, 0x14, 0x44, 0x65, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x22, 0x5d, 0x0a, 0x15, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2a, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x32, 0xd3, 0x0a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x1d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x20,
	0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x1a, 0x16, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1e, 0x2e, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x20, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x1a, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x00, 0x12, 0x48, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x19, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x1d, 0x2e, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x69, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x20, 0x2e, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x1a, 0x1d, 0x2e, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x69, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x65, 0x73,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x26, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x67, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x1c, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x22,
	0x00, 0x12, 0x52, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x20, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x1a, 0x1d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0a, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x20, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x1a, 0x1d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x12, 0x1e, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x4e, 0x0a,
	0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x1e, 0x2e, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a,
	0x0b, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x17, 0x2e, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x1a, 0x1d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x12, 0x23, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x1a, 0x19, 0x2e, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x1a,
	0x1c, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12,
	0x4a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x30, 0x01, 0x42, 0x8a, 0x01, 0x0a, 0x18,
	0x63, 0x68, 0x2e, 0x75, 0x6e, 0x69, 0x62, 0x61, 0x73, 0x2e, 0x75, 0x62, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x42, 0x14, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x65, 0x34,
	0x2f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x76, 0x32, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xa2, 0x02, 0x03, 0x55, 0x42, 0x42,
	0xaa, 0x02, 0x15, 0x55, 0x6e, 0x69, 0x62, 0x61, 0x73, 0x2e, 0x55, 0x42, 0x2e, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpcDatabase_proto_rawDescOnce sync.Once
	file_rpcDatabase_proto_rawDescData = file_rpcDatabase_proto_rawDesc
)

func file_rpcDatabase_proto_rawDescGZIP() []byte {
	file_rpcDatabase_proto_rawDescOnce.Do(func() {
		file_rpcDatabase_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpcDatabase_proto_rawDescData)
	})
	return file_rpcDatabase_proto_rawDescData
}

var file_rpcDatabase_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_rpcDatabase_proto_goTypes = []interface{}{
	(*IngestMetadata)(nil),         // 0: mediaserverproto.IngestMetadata
	(*DerivatIngestRequest)(nil),   // 1: mediaserverproto.DerivatIngestRequest
	(*DerivatIngestResponse)(nil),  // 2: mediaserverproto.DerivatIngestResponse
	(*ItemIdentifier)(nil),         // 3: mediaserverproto.ItemIdentifier
	(*ItemMetadata)(nil),           // 4: mediaserverproto.ItemMetadata
	(*CacheMetadata)(nil),          // 5: mediaserverproto.CacheMetadata
	(*Item)(nil),                   // 6: mediaserverproto.Item
	(*emptypb.Empty)(nil),          // 7: google.protobuf.Empty
	(*ItemsRequest)(nil),           // 8: mediaserverproto.ItemsRequest
	(*NewItem)(nil),                // 9: mediaserverproto.NewItem
	(*CacheRequest)(nil),           // 10: mediaserverproto.CacheRequest
	(*CachesRequest)(nil),          // 11: mediaserverproto.CachesRequest
	(*Cache)(nil),                  // 12: mediaserverproto.Cache
	(*StorageIdentifier)(nil),      // 13: mediaserverproto.StorageIdentifier
	(*CollectionIdentifier)(nil),   // 14: mediaserverproto.CollectionIdentifier
	(*proto.DefaultResponse)(nil),  // 15: genericproto.DefaultResponse
	(*ItemsResult)(nil),            // 16: mediaserverproto.ItemsResult
	(*wrapperspb.StringValue)(nil), // 17: google.protobuf.StringValue
	(*IngestItem)(nil),             // 18: mediaserverproto.IngestItem
	(*CachesResult)(nil),           // 19: mediaserverproto.CachesResult
	(*Storage)(nil),                // 20: mediaserverproto.Storage
	(*Collection)(nil),             // 21: mediaserverproto.Collection
}
var file_rpcDatabase_proto_depIdxs = []int32{
	3,  // 0: mediaserverproto.IngestMetadata.item:type_name -> mediaserverproto.ItemIdentifier
	4,  // 1: mediaserverproto.IngestMetadata.itemMetadata:type_name -> mediaserverproto.ItemMetadata
	5,  // 2: mediaserverproto.IngestMetadata.cacheMetadata:type_name -> mediaserverproto.CacheMetadata
	6,  // 3: mediaserverproto.DerivatIngestResponse.item:type_name -> mediaserverproto.Item
	7,  // 4: mediaserverproto.Database.Ping:input_type -> google.protobuf.Empty
	3,  // 5: mediaserverproto.Database.GetItem:input_type -> mediaserverproto.ItemIdentifier
	8,  // 6: mediaserverproto.Database.GetChildItems:input_type -> mediaserverproto.ItemsRequest
	3,  // 7: mediaserverproto.Database.GetItemMetadata:input_type -> mediaserverproto.ItemIdentifier
	9,  // 8: mediaserverproto.Database.CreateItem:input_type -> mediaserverproto.NewItem
	3,  // 9: mediaserverproto.Database.DeleteItem:input_type -> mediaserverproto.ItemIdentifier
	1,  // 10: mediaserverproto.Database.GetDerivateIngestItem:input_type -> mediaserverproto.DerivatIngestRequest
	7,  // 11: mediaserverproto.Database.GetIngestItem:input_type -> google.protobuf.Empty
	0,  // 12: mediaserverproto.Database.SetIngestItem:input_type -> mediaserverproto.IngestMetadata
	3,  // 13: mediaserverproto.Database.ExistsItem:input_type -> mediaserverproto.ItemIdentifier
	10, // 14: mediaserverproto.Database.GetCache:input_type -> mediaserverproto.CacheRequest
	11, // 15: mediaserverproto.Database.GetCaches:input_type -> mediaserverproto.CachesRequest
	10, // 16: mediaserverproto.Database.DeleteCache:input_type -> mediaserverproto.CacheRequest
	12, // 17: mediaserverproto.Database.InsertCache:input_type -> mediaserverproto.Cache
	13, // 18: mediaserverproto.Database.GetStorage:input_type -> mediaserverproto.StorageIdentifier
	14, // 19: mediaserverproto.Database.GetCollection:input_type -> mediaserverproto.CollectionIdentifier
	7,  // 20: mediaserverproto.Database.GetCollections:input_type -> google.protobuf.Empty
	15, // 21: mediaserverproto.Database.Ping:output_type -> genericproto.DefaultResponse
	6,  // 22: mediaserverproto.Database.GetItem:output_type -> mediaserverproto.Item
	16, // 23: mediaserverproto.Database.GetChildItems:output_type -> mediaserverproto.ItemsResult
	17, // 24: mediaserverproto.Database.GetItemMetadata:output_type -> google.protobuf.StringValue
	15, // 25: mediaserverproto.Database.CreateItem:output_type -> genericproto.DefaultResponse
	15, // 26: mediaserverproto.Database.DeleteItem:output_type -> genericproto.DefaultResponse
	2,  // 27: mediaserverproto.Database.GetDerivateIngestItem:output_type -> mediaserverproto.DerivatIngestResponse
	18, // 28: mediaserverproto.Database.GetIngestItem:output_type -> mediaserverproto.IngestItem
	15, // 29: mediaserverproto.Database.SetIngestItem:output_type -> genericproto.DefaultResponse
	15, // 30: mediaserverproto.Database.ExistsItem:output_type -> genericproto.DefaultResponse
	12, // 31: mediaserverproto.Database.GetCache:output_type -> mediaserverproto.Cache
	19, // 32: mediaserverproto.Database.GetCaches:output_type -> mediaserverproto.CachesResult
	15, // 33: mediaserverproto.Database.DeleteCache:output_type -> genericproto.DefaultResponse
	15, // 34: mediaserverproto.Database.InsertCache:output_type -> genericproto.DefaultResponse
	20, // 35: mediaserverproto.Database.GetStorage:output_type -> mediaserverproto.Storage
	21, // 36: mediaserverproto.Database.GetCollection:output_type -> mediaserverproto.Collection
	21, // 37: mediaserverproto.Database.GetCollections:output_type -> mediaserverproto.Collection
	21, // [21:38] is the sub-list for method output_type
	4,  // [4:21] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_rpcDatabase_proto_init() }
func file_rpcDatabase_proto_init() {
	if File_rpcDatabase_proto != nil {
		return
	}
	file_storage_proto_init()
	file_collection_proto_init()
	file_item_proto_init()
	file_cache_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_rpcDatabase_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngestMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcDatabase_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DerivatIngestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcDatabase_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DerivatIngestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_rpcDatabase_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpcDatabase_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpcDatabase_proto_goTypes,
		DependencyIndexes: file_rpcDatabase_proto_depIdxs,
		MessageInfos:      file_rpcDatabase_proto_msgTypes,
	}.Build()
	File_rpcDatabase_proto = out.File
	file_rpcDatabase_proto_rawDesc = nil
	file_rpcDatabase_proto_goTypes = nil
	file_rpcDatabase_proto_depIdxs = nil
}
